package GraphicsObjects;

public class Point4f {

    public float x;
    public float y;
    public float z;
    public float a;


    // default constructor
    // setting all the variables to 0 if no value passed in
    public Point4f() {
        x = 0.0f;
        y = 0.0f;
        z = 0.0f;
        a = 0.0f;
    }

    //initializing constructor
    //setting all the variables to the passed in value
    public Point4f(float x, float y, float z, float a) {
        this.x = x;
        this.y = y;
        this.z = z;
        this.a = a;
    }

    // sometimes for different algorithms we will need to address the point using positions 0 1 2  3
    //get the variable based on the positions
    public float getPostion(int postion) {
        switch (postion) {
            case 0:
                return x;
            case 1:
                return y;
            case 2:
                return z;
            case 3:
                return a;
            default:
                return Float.NaN;
        }
    }

    //override toString method to change the display in console.
    public String toString() {
        return ("(" + x + "," + y + "," + z + "," + a + ")");
    }

    //implement Point plus a Vector
    // Plus a Vector on a point mathematically is move the
    // point along the vector's direction and the distance moved
    // is the length of the vector.
    public Point4f PlusVector(Vector4f Additonal) {

        return new Point4f(
                this.x + Additonal.x,
                this.y + Additonal.y,
                this.z + Additonal.z,
                this.a + Additonal.a
        );

    }

    //implement Point minus a Vector
    // Similar to the plus vector method, but this time we move the
    // point to the opposite direction of the vector.
    public Point4f MinusVector(Vector4f Minus) {
        return new Point4f(
                this.x - Minus.x,
                this.y - Minus.y,
                this.z - Minus.z,
                this.a - Minus.a
        );
    }


    ///implement  Point - Point
    // A point minus a point gives the vector between this two
    // points (Pointing to the point that be minused)
    public Vector4f MinusPoint(Point4f Minus) {
        return new Vector4f(
                this.x - Minus.x,
                this.y - Minus.y,
                this.z - Minus.z,
                this.a - Minus.a
        );
    }


    // Remember point + point  is not defined so we not write a method for it.


}

/*................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
....................................=?7777+.....................................
.............................,8MMMMMMMMMMMMMMMMM7...............................
...........................$MMMMMMMMMMMMMMMMMMMMMM7.............................
........................IMMMMMMMMMMMMMMMMMMMMMMMMMMMM?..........................
......................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN........................
.....................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$......................
...................ZMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.....................
..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8....................
.................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM...................
................IMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM..................
................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$.................
...............=MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ................
..............:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM................
..............7MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:...............
..............DMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ...............
..............MMMMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMMM8...............
..............MMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMMMMMMMMMMMN...............
..............NMMMMMMMMMMMMMMMMMMMM MM MMMMMMMMMMMMMMMMMMMMMMMMMO...............
..............$MMMMMMMMMMMMMMMMMM MMMM MMMMMMMMMMMMMMMMMMMMMMMMMI...............
..............+MMMMMMMMMMMMMMMMM          MMMMMMMMMMMMMMMMMMMMMM=...............
...............8MMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMMM................
................MMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMM8................
................MMMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMMN,................
................=MMMMMMMMMMMMMMMMMMMMM MMMMMMMMMMMMMMMMMMMMMMM..................
.................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ..................
..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMD...................
...................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.....................
....................8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM......................
.....................,8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM,.......................
........................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMN?.........................
..........................NMMMMMMMMMMMMMMMMMMMMMMMMMI...........................
.............................$MMMMMMMMMMMMMMMMMMM?..............................
.................................,I$NMMMMMN$?...................................
................................................................................
................................................................................
................................................................................
.......................................................................*/
